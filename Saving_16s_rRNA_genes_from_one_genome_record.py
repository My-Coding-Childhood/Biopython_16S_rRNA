# -*- coding: utf-8 -*-
"""Saving 16S rRNA genes from one Genome Record

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ldJ8q0mfLVVTIkqi_S7VZSs4-JAwiMch
"""

'''
Copyright <2022> <Gail Rosen>

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'''

'''

Code Adapted from (modified by Gail Rosen in 2014):
Retrieve Genbank entries from the nucleotide database at NCBI.

This file extracts all 16S rRNA genes from a Streptococcus pyogenes Manfredo complete genome

-----------------------------------------------------------
(c) 2013 Allegra Via and Kristian Rother
    Licensed under the conditions of the Python License

    This code appears in section 20.4.3 of the book
    "Managing Biological Data with Python".
-----------------------------------------------------------
'''

!pip install biopython

from google.colab import drive
drive.mount('/content/drive')

# Import Entrez, Seq input/output, Sequence, and bio.alphabet modules
from Bio import Entrez
from Bio import SeqIO
from Bio import Seq

# Can put any email address below
Entrez.email = "ugwupaschal@gmail.com"

handle = Entrez.esearch(db="nucleotide", term="16S rRNA[gene] AND streptococcus[ORGN] AND Manfredo AND genome")  # search sequences by a combination of keywords
records = Entrez.read(handle)  #store records from search
print(records['Count'])  #This prints how many results there are from your search

#This retrieves the Genbank record for the top result
handle = Entrez.efetch(db="nucleotide", id=records['IdList'][0], rettype="gb", retmode="text")
record = SeqIO.read(handle, "genbank")
handle.close()

#Initialize variables
sixteen_s=[]
seqs=[]
locations=[]

print(record); print("-----------")
print(record.annotations["taxonomy"])

#This goes through each feature of a genbank record (features are listed on the left of a Genbank record)
for feature in record.features:
	if feature.type=='gene' or feature.type == 'rRNA':  #If the feature is a Gene or rRNA then
		if 'gene' in feature.qualifiers:  #This looks to see if /gene= exists in the second column
			if feature.qualifiers['gene'][0]=='16S rRNA':  #If the first occurrence of gene is /gene="16S rRNA"
				if str(feature.location) not in locations:  #If the feature location is not already in the locations list
					print(feature.location)
					locations.append(str(feature.location))  #append the location to the locations list
					print(locations)
					sixteen_s.append(feature)  # append the feature itself to a list of 16S features
					seqs.append(feature.extract(record.seq))  #We can also extract just the sequences

print(len(sixteen_s))

#output_handle=open("/workshop/rRNAs.fa","w")
output_handle=open("rRNAs.fa","w")

#SeqIO.write(final, output_handle, "fasta")
for i in range(len(seqs)):
	output_handle.write(">%s %s %s\n%s\n" % (record.id,record.description,sixteen_s[i].location,str(seqs[i])))  #This outputs the record ID, description, location of the sequence and sequence itself to a file
output_handle.close()